<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ClaimMapper">



	<select id="findClaims" parameterType="net.meshkorea.mcp.api.domain.model.claim.ClaimSearchDto" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimList">
	  <!--SELECT
	  	c.claim_no,
	  	status_code,
	  	type_code,
	  	request_code,
	  	cause_code,
	  	customer_blame,
	  	store_blame,
	  	partner_blame,
	  	mesh_blame,
	  	none_blame,
	  	creator,
	  	create_dt,
	  	updater,
	  	update_dt,
	  	order_id,
	  	claim_order_id,
	  	order_number,
	  	claim_order_number
	  FROM
	  	claim c
	  	LEFT JOIN order_claim_relation r
	  	on c.claim_no = r.claim_no
		<if test="typeCode != ''">
			and type_code = #{typeCode}
		</if>
		<if test="requestCode != ''">
			and request_code = #{requestCode}
		</if>
		<if test="orderIds.size != 0">
			and order_id in
			<foreach collection="orderIds" item="item" index="index" open="(" separator=", " close=")">
				#{item}
			</foreach>
		</if>-->
		SELECT
			c.claim_no,
			status_code,
			type_code,
			request_code,
			cause_code,
			customer_blame,
			store_blame,
			partner_blame,
			mesh_blame,
			none_blame,
			creator,
			create_dt,
			updater,
			update_dt,
			order_id,
			claim_order_id,
			order_number,
			claim_order_number
		FROM
		(
			SELECT
				claim_no,
				status_code,
				type_code,
				request_code,
				cause_code,
				customer_blame,
				store_blame,
				partner_blame,
				mesh_blame,
				none_blame,
				creator,
				create_dt,
				updater,
				update_dt
			FROM claim
			WHERE 1 = 1
			<if test="claimType != null and claimType != ''">
				AND type_code = #{claimType}
			</if>
			<if test="requestType != null and requestType != ''">
				AND request_code = #{requestType}
			</if>
			<if test="claimStatusType != null and claimStatusType.size != 0">
			  	AND status_code IN
				<foreach collection="claimStatusType" item="item" index="index" open="(" separator=", " close=")">
					#{item}
				</foreach>
			</if>
			<if test="searchType == 'claimNo'">
				AND claim_no LIKE CONCAT('%', #{searchString}, '%')
			</if>
			AND create_dt BETWEEN #{request.startDate} AND #{request.endDate}
		) c
		INNER JOIN (
			SELECT
				order_id,
				claim_no,
				claim_order_id,
				order_number,
				claim_order_number
			FROM order_claim_relation
			WHERE 1 = 1
			<if test="orderIds != null and orderIds.size != 0">
				AND order_id IN
				<foreach collection="orderIds" item="item" index="index" open="(" separator=", " close=")">
					#{item}
				</foreach>
			</if>
			<if test="searchType == 'originOrderNumber'">
				AND order_number LIKE CONCAT('%', #{searchString}, '%')
			</if>
			<if test="searchType == 'claimOrderNumber'">
				AND claim_order_number LIKE CONCAT('%', #{searchString}, '%')
			</if>
			<if test="searchType == 'claimNo'">
				AND claim_no LIKE CONCAT('%', #{searchString}, '%')
			</if>
		) o
		ON c.claim_no = o.claim_no

	</select>

	<select id="getClaimDetail" parameterType="java.lang.Long" resultType="net.meshkorea.mcp.api.domain.model.claim.Claim">
		SELECT
	  	c.claim_no,
	  	status_code,
	  	type_code,
	  	request_code,
	  	cause_code,
	  	customer_blame,
	  	store_blame,
	  	partner_blame,
	  	mesh_blame,
	  	none_blame,
	  	creator,
	  	create_dt,
	  	updater,
	  	update_dt,
	  	order_id,
	  	claim_order_id,
	  	order_number,
	  	claim_order_number
	  FROM
	  	claim c
	  	LEFT JOIN order_claim_relation r
	  	on c.claim_no = r.claim_no
	  WHERE
	  	c.claim_no = #{id}
	</select>

	<select id="getClaimDescription" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimDescriptionDto" parameterType="java.lang.Long">
		SELECT
			claim_description_no,
			order_id,
			claim_no,
			description,
			creator,
			create_dt
		FROM
			claim_description
		WHERE
			claim_description_no = #{id}
	</select>

	<select id="getClaimAdjustment" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimAdjustment" parameterType="java.lang.Long">
		SELECT
			claim_adjustment_no,
			order_id,
			claim_no,
			adjustment_value,
			adjustment_type_code,
			delivery_fee_value,
			delivery_fee_type_code,
			cancel_fee_value,
			cancel_fee_type_code,
			creator,
			create_dt,
			updater,
			update_dt
		FROM
			claim_adjustment
		WHERE
			claim_no = #{claimNo}
	</select>

	<insert id="createClaim" parameterType="net.meshkorea.mcp.api.domain.model.claim.CreateClaimRequest" useGeneratedKeys="true" keyProperty="claimNo">
		INSERT INTO claim (
			status_code,
			type_code,
			request_code,
			cause_code,
			customer_blame,
			store_blame,
			partner_blame,
			mesh_blame,
			none_blame,
			creator,
			create_dt,
			updater,
			update_dt
		) VALUES (
			#{claimInfo.statusCode},
			#{claimInfo.typeCode},
			#{claimInfo.requestCode},
			#{claimInfo.causeCode},
			#{claimInfo.customerBlame},
			#{claimInfo.storeBlame},
			#{claimInfo.partnerBlame},
			#{claimInfo.meshBlame},
			#{claimInfo.noneBlame},
			#{creator},
			now(),
			#{updater},
			now()
		)
	</insert>

	<insert id="insertClaimHistory" parameterType="net.meshkorea.mcp.api.domain.model.claim.ClaimHistory">
		INSERT INTO claim_history (
			claim_no,
			creator,
			create_dt,
			json_string
		) VALUES (
			#{claimNo},
			#{creator},
			NOW(),
			#{jsonString}
		)
	</insert>

	<update id="updateClaim" parameterType="net.meshkorea.mcp.api.domain.model.claim.UpdateClaimRequest">
		UPDATE claim SET
			status_code = #{claimInfo.statusCode},
			type_code = #{claimInfo.typeCode},
			request_code = #{claimInfo.requestCode},
			cause_code = #{claimInfo.causeCode},
			customer_blame = #{claimInfo.customerBlame},
			store_blame = #{claimInfo.storeBlame},
			partner_blame = #{claimInfo.partnerBlame},
			mesh_blame = #{claimInfo.meshBlame},
			none_blame = #{claimInfo.noneBlame},
			updater = #{updater},
			update_dt = now()
		WHERE claim_no = #{claimInfo.claimNo}
	</update>

	<insert id="createOrderClaimRelation" parameterType="net.meshkorea.mcp.api.domain.model.claim.CreateClaimRequest">
		INSERT INTO order_claim_relation (
			order_id,
			claim_no,
			claim_order_id,
			order_number,
			claim_order_number
		) VALUES (
			#{orderId},
			#{claimNo},
			#{claimOrderId},
			#{orderNumber},
			#{claimOrderNumber}
		)
	</insert>

	<select id="getClaimOrderRelation" parameterType="java.lang.Integer" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimOrderRelationDto">
		SELECT
			claim_no,
			order_id,
			claim_order_id,
			order_number,
			claim_order_number
		FROM
			order_claim_relation
		WHERE
			claim_no = #{claimNo}
	</select>

	<insert id="updateClaimDescription" parameterType="net.meshkorea.mcp.api.domain.model.claim.UpdateClaimDescriptionRequest">
		INSERT INTO claim_description (
			order_id,
			claim_no,
			description,
			creator,
			create_dt
		) VALUES (
			#{orderId},
			#{claimNo},
			#{description},
			#{creator},
			NOW()
		)
	</insert>

	<update id="updateClaimAdjustment" parameterType="net.meshkorea.mcp.api.domain.model.claim.UpdateClaimAdjustmentRequest">
		UPDATE claim_adjustment SET

	</update>

	<select id="getClaimReasonCode" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimReasonCode">
		SELECT  t2.code as parentCode, t2.code_name as parentCodeName, t3.code as childCode, t3.code_name as childCodeName
		FROM codes AS t1
		LEFT JOIN codes AS t2 ON t2.parent_code_no = t1.code_no
		LEFT JOIN codes AS t3 ON t3.parent_code_no = t2.code_no
		LEFT JOIN codes AS t4 ON t4.parent_code_no = t3.code_no
		WHERE t1.code = 'CAUSE_TYPE'
	</select>

	<select id="getClaimCode" resultType="net.meshkorea.mcp.api.domain.model.claim.ClaimCode" parameterType="java.lang.String">
		SELECT
			code,
			code_name
		FROM
			codes
		WHERE
			parent_code_no = ( SELECT code_no FROM codes WHERE code = #{code})
		ORDER BY display_order asc
	</select>
</mapper>
